name: CI + CD Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: DEV  # Link to the environment where TEST is defined
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Explicitly using Node.js 20

      - name: Install Dependencies
        working-directory: env_test_app
        run: npm install

      - name: Echo TEST Value
        working-directory: env_test_app
        run: echo "TEST value is ${{ vars.TEST }}"
        env:
          TEST: ${{ vars.TEST }}  # Use this if TEST is a secret, otherwise use the environment variable directly

      - name: Build Project
        working-directory: env_test_app
        run: npm run build
        env:
          TEST: ${{ vars.TEST }}  # Use this if TEST is a secret, otherwise use the environment variable directly

  deploy_dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    environment: DEV  # This links the job to the DEV environment
    steps:
      - name: Echo TEST Value in DEV
        run: echo "Deploying to DEV environment with TEST value ${{ vars.TEST }}"
        env:
          TEST: ${{ vars.TEST }}  # Use this if TEST is a secret, otherwise use the environment variable directly

      - name: Deploy DEV
        run: echo 'Deploying to DEV environment'
        env:
          TEST: ${{ vars.TEST }}  # Use this if TEST is a secret, otherwise use the environment variable directly

  deploy_prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    environment: PROD  # This links the job to the PROD environment
    steps:
      - name: Echo TEST Value in PROD
        run: echo "Deploying to PROD environment with TEST value ${{ vars.TEST }}"
        env:
          TEST: ${{ vars.TEST }}  # Use this if TEST is a secret, otherwise use the environment variable directly

      - name: Deploy PROD
        run: echo 'Deploying to PROD environment'
        env:
          TEST: ${{ vars.TEST }}  # Use this if TEST is a secret, otherwise use the environment variable directly
